{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Res_LSTM_GAN","provenance":[],"collapsed_sections":[],"machine_shape":"hm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"3lolUlx9ccl_","colab_type":"code","outputId":"f146c9cd-5d80-47ac-9d16-521329bf11ef","executionInfo":{"status":"ok","timestamp":1580906533047,"user_tz":-60,"elapsed":10207,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["# import libraries\n","from __future__ import absolute_import, division, print_function, unicode_literals\n","from google.colab import files\n","from google.colab import drive\n","from PIL import Image\n","try:\n","  # %tensorflow_version only exists in Colab.\n","  %tensorflow_version 2.x\n","except Exception:\n","  pass\n","import tensorflow as tf\n","\n","from __future__ import print_function\n","import numpy as np\n","import keras\n","import os\n","from glob import glob\n","from tensorflow.keras.models import Sequential, Model\n","from tensorflow.keras.layers import Input, Dropout, Conv2D, Concatenate, Conv2DTranspose, LeakyReLU, Activation, BatchNormalization, UpSampling2D, ZeroPadding2D\n","from tensorflow.keras import optimizers\n","from tensorflow.keras import applications\n","from tensorflow.keras import backend as K\n","import matplotlib.pyplot as plt\n","from PIL import Image"],"execution_count":1,"outputs":[{"output_type":"stream","text":["TensorFlow 2.x selected.\n"],"name":"stdout"},{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"xiFL_CrUcqj8","colab_type":"code","outputId":"761f111b-c994-479f-91ed-7f12aeda074d","executionInfo":{"status":"ok","timestamp":1580906533048,"user_tz":-60,"elapsed":10134,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["drive.mount('/content/drive')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yPrzSceAcs8T","colab_type":"code","colab":{}},"source":["# dataset\n","\n","local_download_path = os.path.expanduser('/content/drive/My Drive/Images')\n","img = []\n","for filename in os.listdir(local_download_path): \n","  for images in os.listdir(os.path.join(local_download_path,filename)):\n","    temp = Image.open(os.path.join(os.path.join(local_download_path,filename),images))\n","    temp = temp.convert('L')\n","    img.append([images,temp.resize((800,800))])\n","\n","img.sort() "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"PgOF0e0elTYv","colab_type":"code","colab":{}},"source":["input_x = 224\n","input_y = 224\n","output_x = 512\n","output_y = 512\n","\n","# input image dimensions\n","input_shape_Res = (input_x, input_y, 3)\n","input_shape_128 = (128,128,1)\n","input_shape_GAN = (7,7,2048)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"1_yFOmeKnWvM","colab_type":"code","outputId":"96b4697b-733e-4b9e-91a1-dd5fe1aab064","executionInfo":{"status":"ok","timestamp":1580906554000,"user_tz":-60,"elapsed":31005,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["Res_model = applications.ResNet50V2(weights = 'imagenet', include_top = False, input_shape = input_shape_Res)\n","Res_model.summary()"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Model: \"resnet50v2\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_1 (InputLayer)            [(None, 224, 224, 3) 0                                            \n","__________________________________________________________________________________________________\n","conv1_pad (ZeroPadding2D)       (None, 230, 230, 3)  0           input_1[0][0]                    \n","__________________________________________________________________________________________________\n","conv1_conv (Conv2D)             (None, 112, 112, 64) 9472        conv1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","pool1_pad (ZeroPadding2D)       (None, 114, 114, 64) 0           conv1_conv[0][0]                 \n","__________________________________________________________________________________________________\n","pool1_pool (MaxPooling2D)       (None, 56, 56, 64)   0           pool1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","conv2_block1_preact_bn (BatchNo (None, 56, 56, 64)   256         pool1_pool[0][0]                 \n","__________________________________________________________________________________________________\n","conv2_block1_preact_relu (Activ (None, 56, 56, 64)   0           conv2_block1_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv2_block1_1_conv (Conv2D)    (None, 56, 56, 64)   4096        conv2_block1_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv2_block1_1_bn (BatchNormali (None, 56, 56, 64)   256         conv2_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_1_relu (Activation (None, 56, 56, 64)   0           conv2_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_2_pad (ZeroPadding (None, 58, 58, 64)   0           conv2_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_2_conv (Conv2D)    (None, 56, 56, 64)   36864       conv2_block1_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv2_block1_2_bn (BatchNormali (None, 56, 56, 64)   256         conv2_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_2_relu (Activation (None, 56, 56, 64)   0           conv2_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_0_conv (Conv2D)    (None, 56, 56, 256)  16640       conv2_block1_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv2_block1_3_conv (Conv2D)    (None, 56, 56, 256)  16640       conv2_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_out (Add)          (None, 56, 56, 256)  0           conv2_block1_0_conv[0][0]        \n","                                                                 conv2_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_preact_bn (BatchNo (None, 56, 56, 256)  1024        conv2_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block2_preact_relu (Activ (None, 56, 56, 256)  0           conv2_block2_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv2_block2_1_conv (Conv2D)    (None, 56, 56, 64)   16384       conv2_block2_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv2_block2_1_bn (BatchNormali (None, 56, 56, 64)   256         conv2_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_1_relu (Activation (None, 56, 56, 64)   0           conv2_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_2_pad (ZeroPadding (None, 58, 58, 64)   0           conv2_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_2_conv (Conv2D)    (None, 56, 56, 64)   36864       conv2_block2_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv2_block2_2_bn (BatchNormali (None, 56, 56, 64)   256         conv2_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_2_relu (Activation (None, 56, 56, 64)   0           conv2_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_3_conv (Conv2D)    (None, 56, 56, 256)  16640       conv2_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_out (Add)          (None, 56, 56, 256)  0           conv2_block1_out[0][0]           \n","                                                                 conv2_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_preact_bn (BatchNo (None, 56, 56, 256)  1024        conv2_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block3_preact_relu (Activ (None, 56, 56, 256)  0           conv2_block3_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv2_block3_1_conv (Conv2D)    (None, 56, 56, 64)   16384       conv2_block3_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv2_block3_1_bn (BatchNormali (None, 56, 56, 64)   256         conv2_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_1_relu (Activation (None, 56, 56, 64)   0           conv2_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_2_pad (ZeroPadding (None, 58, 58, 64)   0           conv2_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_2_conv (Conv2D)    (None, 28, 28, 64)   36864       conv2_block3_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv2_block3_2_bn (BatchNormali (None, 28, 28, 64)   256         conv2_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_2_relu (Activation (None, 28, 28, 64)   0           conv2_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","max_pooling2d (MaxPooling2D)    (None, 28, 28, 256)  0           conv2_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block3_3_conv (Conv2D)    (None, 28, 28, 256)  16640       conv2_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_out (Add)          (None, 28, 28, 256)  0           max_pooling2d[0][0]              \n","                                                                 conv2_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_preact_bn (BatchNo (None, 28, 28, 256)  1024        conv2_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_preact_relu (Activ (None, 28, 28, 256)  0           conv3_block1_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv3_block1_1_conv (Conv2D)    (None, 28, 28, 128)  32768       conv3_block1_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv3_block1_1_bn (BatchNormali (None, 28, 28, 128)  512         conv3_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_1_relu (Activation (None, 28, 28, 128)  0           conv3_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_2_pad (ZeroPadding (None, 30, 30, 128)  0           conv3_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_2_conv (Conv2D)    (None, 28, 28, 128)  147456      conv3_block1_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv3_block1_2_bn (BatchNormali (None, 28, 28, 128)  512         conv3_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_2_relu (Activation (None, 28, 28, 128)  0           conv3_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_0_conv (Conv2D)    (None, 28, 28, 512)  131584      conv3_block1_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv3_block1_3_conv (Conv2D)    (None, 28, 28, 512)  66048       conv3_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_out (Add)          (None, 28, 28, 512)  0           conv3_block1_0_conv[0][0]        \n","                                                                 conv3_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_preact_bn (BatchNo (None, 28, 28, 512)  2048        conv3_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block2_preact_relu (Activ (None, 28, 28, 512)  0           conv3_block2_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv3_block2_1_conv (Conv2D)    (None, 28, 28, 128)  65536       conv3_block2_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv3_block2_1_bn (BatchNormali (None, 28, 28, 128)  512         conv3_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_1_relu (Activation (None, 28, 28, 128)  0           conv3_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_2_pad (ZeroPadding (None, 30, 30, 128)  0           conv3_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_2_conv (Conv2D)    (None, 28, 28, 128)  147456      conv3_block2_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv3_block2_2_bn (BatchNormali (None, 28, 28, 128)  512         conv3_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_2_relu (Activation (None, 28, 28, 128)  0           conv3_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_3_conv (Conv2D)    (None, 28, 28, 512)  66048       conv3_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_out (Add)          (None, 28, 28, 512)  0           conv3_block1_out[0][0]           \n","                                                                 conv3_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_preact_bn (BatchNo (None, 28, 28, 512)  2048        conv3_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block3_preact_relu (Activ (None, 28, 28, 512)  0           conv3_block3_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv3_block3_1_conv (Conv2D)    (None, 28, 28, 128)  65536       conv3_block3_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv3_block3_1_bn (BatchNormali (None, 28, 28, 128)  512         conv3_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_1_relu (Activation (None, 28, 28, 128)  0           conv3_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_2_pad (ZeroPadding (None, 30, 30, 128)  0           conv3_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_2_conv (Conv2D)    (None, 28, 28, 128)  147456      conv3_block3_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv3_block3_2_bn (BatchNormali (None, 28, 28, 128)  512         conv3_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_2_relu (Activation (None, 28, 28, 128)  0           conv3_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_3_conv (Conv2D)    (None, 28, 28, 512)  66048       conv3_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_out (Add)          (None, 28, 28, 512)  0           conv3_block2_out[0][0]           \n","                                                                 conv3_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_preact_bn (BatchNo (None, 28, 28, 512)  2048        conv3_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block4_preact_relu (Activ (None, 28, 28, 512)  0           conv3_block4_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv3_block4_1_conv (Conv2D)    (None, 28, 28, 128)  65536       conv3_block4_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv3_block4_1_bn (BatchNormali (None, 28, 28, 128)  512         conv3_block4_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_1_relu (Activation (None, 28, 28, 128)  0           conv3_block4_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_2_pad (ZeroPadding (None, 30, 30, 128)  0           conv3_block4_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_2_conv (Conv2D)    (None, 14, 14, 128)  147456      conv3_block4_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv3_block4_2_bn (BatchNormali (None, 14, 14, 128)  512         conv3_block4_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_2_relu (Activation (None, 14, 14, 128)  0           conv3_block4_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","max_pooling2d_1 (MaxPooling2D)  (None, 14, 14, 512)  0           conv3_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block4_3_conv (Conv2D)    (None, 14, 14, 512)  66048       conv3_block4_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_out (Add)          (None, 14, 14, 512)  0           max_pooling2d_1[0][0]            \n","                                                                 conv3_block4_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_preact_bn (BatchNo (None, 14, 14, 512)  2048        conv3_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_preact_relu (Activ (None, 14, 14, 512)  0           conv4_block1_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv4_block1_1_conv (Conv2D)    (None, 14, 14, 256)  131072      conv4_block1_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv4_block1_1_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_1_relu (Activation (None, 14, 14, 256)  0           conv4_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_2_pad (ZeroPadding (None, 16, 16, 256)  0           conv4_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_2_conv (Conv2D)    (None, 14, 14, 256)  589824      conv4_block1_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv4_block1_2_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_2_relu (Activation (None, 14, 14, 256)  0           conv4_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_0_conv (Conv2D)    (None, 14, 14, 1024) 525312      conv4_block1_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv4_block1_3_conv (Conv2D)    (None, 14, 14, 1024) 263168      conv4_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_out (Add)          (None, 14, 14, 1024) 0           conv4_block1_0_conv[0][0]        \n","                                                                 conv4_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_preact_bn (BatchNo (None, 14, 14, 1024) 4096        conv4_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block2_preact_relu (Activ (None, 14, 14, 1024) 0           conv4_block2_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv4_block2_1_conv (Conv2D)    (None, 14, 14, 256)  262144      conv4_block2_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv4_block2_1_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_1_relu (Activation (None, 14, 14, 256)  0           conv4_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_2_pad (ZeroPadding (None, 16, 16, 256)  0           conv4_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_2_conv (Conv2D)    (None, 14, 14, 256)  589824      conv4_block2_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv4_block2_2_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_2_relu (Activation (None, 14, 14, 256)  0           conv4_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_3_conv (Conv2D)    (None, 14, 14, 1024) 263168      conv4_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_out (Add)          (None, 14, 14, 1024) 0           conv4_block1_out[0][0]           \n","                                                                 conv4_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_preact_bn (BatchNo (None, 14, 14, 1024) 4096        conv4_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block3_preact_relu (Activ (None, 14, 14, 1024) 0           conv4_block3_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv4_block3_1_conv (Conv2D)    (None, 14, 14, 256)  262144      conv4_block3_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv4_block3_1_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_1_relu (Activation (None, 14, 14, 256)  0           conv4_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_2_pad (ZeroPadding (None, 16, 16, 256)  0           conv4_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_2_conv (Conv2D)    (None, 14, 14, 256)  589824      conv4_block3_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv4_block3_2_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_2_relu (Activation (None, 14, 14, 256)  0           conv4_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_3_conv (Conv2D)    (None, 14, 14, 1024) 263168      conv4_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_out (Add)          (None, 14, 14, 1024) 0           conv4_block2_out[0][0]           \n","                                                                 conv4_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_preact_bn (BatchNo (None, 14, 14, 1024) 4096        conv4_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block4_preact_relu (Activ (None, 14, 14, 1024) 0           conv4_block4_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv4_block4_1_conv (Conv2D)    (None, 14, 14, 256)  262144      conv4_block4_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv4_block4_1_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block4_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_1_relu (Activation (None, 14, 14, 256)  0           conv4_block4_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_2_pad (ZeroPadding (None, 16, 16, 256)  0           conv4_block4_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_2_conv (Conv2D)    (None, 14, 14, 256)  589824      conv4_block4_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv4_block4_2_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block4_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_2_relu (Activation (None, 14, 14, 256)  0           conv4_block4_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_3_conv (Conv2D)    (None, 14, 14, 1024) 263168      conv4_block4_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_out (Add)          (None, 14, 14, 1024) 0           conv4_block3_out[0][0]           \n","                                                                 conv4_block4_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_preact_bn (BatchNo (None, 14, 14, 1024) 4096        conv4_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block5_preact_relu (Activ (None, 14, 14, 1024) 0           conv4_block5_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv4_block5_1_conv (Conv2D)    (None, 14, 14, 256)  262144      conv4_block5_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv4_block5_1_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block5_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_1_relu (Activation (None, 14, 14, 256)  0           conv4_block5_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_2_pad (ZeroPadding (None, 16, 16, 256)  0           conv4_block5_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_2_conv (Conv2D)    (None, 14, 14, 256)  589824      conv4_block5_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv4_block5_2_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block5_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_2_relu (Activation (None, 14, 14, 256)  0           conv4_block5_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_3_conv (Conv2D)    (None, 14, 14, 1024) 263168      conv4_block5_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_out (Add)          (None, 14, 14, 1024) 0           conv4_block4_out[0][0]           \n","                                                                 conv4_block5_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_preact_bn (BatchNo (None, 14, 14, 1024) 4096        conv4_block5_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block6_preact_relu (Activ (None, 14, 14, 1024) 0           conv4_block6_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv4_block6_1_conv (Conv2D)    (None, 14, 14, 256)  262144      conv4_block6_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv4_block6_1_bn (BatchNormali (None, 14, 14, 256)  1024        conv4_block6_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_1_relu (Activation (None, 14, 14, 256)  0           conv4_block6_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_2_pad (ZeroPadding (None, 16, 16, 256)  0           conv4_block6_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_2_conv (Conv2D)    (None, 7, 7, 256)    589824      conv4_block6_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv4_block6_2_bn (BatchNormali (None, 7, 7, 256)    1024        conv4_block6_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_2_relu (Activation (None, 7, 7, 256)    0           conv4_block6_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","max_pooling2d_2 (MaxPooling2D)  (None, 7, 7, 1024)   0           conv4_block5_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block6_3_conv (Conv2D)    (None, 7, 7, 1024)   263168      conv4_block6_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_out (Add)          (None, 7, 7, 1024)   0           max_pooling2d_2[0][0]            \n","                                                                 conv4_block6_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_preact_bn (BatchNo (None, 7, 7, 1024)   4096        conv4_block6_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_preact_relu (Activ (None, 7, 7, 1024)   0           conv5_block1_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv5_block1_1_conv (Conv2D)    (None, 7, 7, 512)    524288      conv5_block1_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv5_block1_1_bn (BatchNormali (None, 7, 7, 512)    2048        conv5_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_1_relu (Activation (None, 7, 7, 512)    0           conv5_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_2_pad (ZeroPadding (None, 9, 9, 512)    0           conv5_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_2_conv (Conv2D)    (None, 7, 7, 512)    2359296     conv5_block1_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv5_block1_2_bn (BatchNormali (None, 7, 7, 512)    2048        conv5_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_2_relu (Activation (None, 7, 7, 512)    0           conv5_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_0_conv (Conv2D)    (None, 7, 7, 2048)   2099200     conv5_block1_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv5_block1_3_conv (Conv2D)    (None, 7, 7, 2048)   1050624     conv5_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_out (Add)          (None, 7, 7, 2048)   0           conv5_block1_0_conv[0][0]        \n","                                                                 conv5_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_preact_bn (BatchNo (None, 7, 7, 2048)   8192        conv5_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block2_preact_relu (Activ (None, 7, 7, 2048)   0           conv5_block2_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv5_block2_1_conv (Conv2D)    (None, 7, 7, 512)    1048576     conv5_block2_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv5_block2_1_bn (BatchNormali (None, 7, 7, 512)    2048        conv5_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_1_relu (Activation (None, 7, 7, 512)    0           conv5_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_2_pad (ZeroPadding (None, 9, 9, 512)    0           conv5_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_2_conv (Conv2D)    (None, 7, 7, 512)    2359296     conv5_block2_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv5_block2_2_bn (BatchNormali (None, 7, 7, 512)    2048        conv5_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_2_relu (Activation (None, 7, 7, 512)    0           conv5_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_3_conv (Conv2D)    (None, 7, 7, 2048)   1050624     conv5_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_out (Add)          (None, 7, 7, 2048)   0           conv5_block1_out[0][0]           \n","                                                                 conv5_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_preact_bn (BatchNo (None, 7, 7, 2048)   8192        conv5_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block3_preact_relu (Activ (None, 7, 7, 2048)   0           conv5_block3_preact_bn[0][0]     \n","__________________________________________________________________________________________________\n","conv5_block3_1_conv (Conv2D)    (None, 7, 7, 512)    1048576     conv5_block3_preact_relu[0][0]   \n","__________________________________________________________________________________________________\n","conv5_block3_1_bn (BatchNormali (None, 7, 7, 512)    2048        conv5_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_1_relu (Activation (None, 7, 7, 512)    0           conv5_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_2_pad (ZeroPadding (None, 9, 9, 512)    0           conv5_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_2_conv (Conv2D)    (None, 7, 7, 512)    2359296     conv5_block3_2_pad[0][0]         \n","__________________________________________________________________________________________________\n","conv5_block3_2_bn (BatchNormali (None, 7, 7, 512)    2048        conv5_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_2_relu (Activation (None, 7, 7, 512)    0           conv5_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_3_conv (Conv2D)    (None, 7, 7, 2048)   1050624     conv5_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_out (Add)          (None, 7, 7, 2048)   0           conv5_block2_out[0][0]           \n","                                                                 conv5_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","post_bn (BatchNormalization)    (None, 7, 7, 2048)   8192        conv5_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","post_relu (Activation)          (None, 7, 7, 2048)   0           post_bn[0][0]                    \n","==================================================================================================\n","Total params: 23,564,800\n","Trainable params: 23,519,360\n","Non-trainable params: 45,440\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tGTvZ1TycteQ","colab_type":"code","colab":{}},"source":["def map_data(dataset,start_index, end_index, input_x, input_y, output_x, output_y):\n","  \n","  data = []\n","  labels = []\n","  mask = []\n","\n","  for i in range(start_index, end_index):\n","    data.append(np.array(dataset[i][1].resize((input_x,input_y))))\n","    mask.append(np.array(dataset[i][1].resize((128,128))))\n","    labels.append(np.array(dataset[i][1].resize((output_x,output_y))))\n","\n","  return data, labels, mask"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"rWxXRMXxsi_a","colab_type":"code","outputId":"494119df-1f56-4721-b21a-943331b82dbb","executionInfo":{"status":"ok","timestamp":1580906554003,"user_tz":-60,"elapsed":30957,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["len(img)"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["949"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"1ahVJITKcv5G","colab_type":"code","colab":{}},"source":["# # Training and Validation sets (test)\n","\n","TRAIN_SPLIT = 900 # to change\n","\n","\n","\n","x_train, y_train, mask_train = map_data(img, 0, TRAIN_SPLIT, input_x,input_y,output_x,output_y)\n","x_val, y_val, mask_val = map_data(img, TRAIN_SPLIT,len(img), input_x, input_y,output_x,output_y)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"QCr9Hzy5c1B0","colab_type":"code","colab":{}},"source":["# Take the image data from the list and stack to create a higher dimensional tensor not a 1D array of arrays\n","x_train = np.stack(np.array(x_train))\n","y_train = np.stack(np.array(y_train))\n","mask_train = np.stack(np.array(mask_train))\n","x_val = np.stack(np.array(x_val))\n","y_val = np.stack(np.array(y_val))\n","mask_val = np.stack(np.array(mask_val))\n","\n","# Window of interest\n","#dataset = dataset[:, x1:x2, y1:y1]\n","\n","# Channels last\n","x_train = np.repeat(x_train[:, :,:, np.newaxis], 3, axis=3)\n","#x_train = np.expand_dims(x_train, 3)\n","y_train = np.expand_dims(y_train, 3)\n","mask_train = np.expand_dims(mask_train, 3)\n","#x_val = np.expand_dims(x_val, 3)\n","x_val = np.repeat(x_val[:, :,:, np.newaxis], 3, axis=3)\n","y_val = np.expand_dims(y_val, 3)\n","mask_val = np.expand_dims(mask_val, 3)\n","#dataset.shape\n","\n","# preprocessing\n","x_train = x_train.astype('float32')\n","y_train = y_train.astype('float32')\n","mask_train = mask_train.astype('float32')\n","x_val = x_val.astype('float32')\n","y_val = y_val.astype('float32')\n","mask_val = mask_val.astype('float32')\n","\n","x_train /= 255\n","y_train /= 255\n","mask_train /= 255\n","x_val /= 255\n","y_val /= 255\n","mask_val /= 255\n","\n","x_train = x_train*2.0 -1.0\n","y_train = y_train*2.0 -1.0\n","mask_train = mask_train*2.0 -1.0\n","x_val = x_val*2.0 -1.0\n","y_val = y_val*2.0 -1.0\n","mask_val = mask_val*2.0 -1.0\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"HB-9qyZTp2W7","colab_type":"code","colab":{}},"source":["ft_train = Res_model.predict(x_train)\n","ft_val = Res_model.predict(x_val)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5eqeKOa0s1Q5","colab_type":"code","outputId":"15c1df5d-f31a-41ae-aeb0-cd2843cea76a","executionInfo":{"status":"ok","timestamp":1580897329346,"user_tz":-60,"elapsed":1042,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["ft_train.shape"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(900, 7, 7, 2048)"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"GlCEymQGYh6z","colab_type":"text"},"source":[""]},{"cell_type":"markdown","metadata":{"id":"Cd4Z95-ZYhuH","colab_type":"text"},"source":[""]},{"cell_type":"code","metadata":{"id":"0DV59NMcdDCV","colab_type":"code","colab":{}},"source":["def similar_unet(input_shape = (7,7,2048), input_shape_128=(128,128,1), fn=64):\n","  \"\"\"\n","  Architecture similar to UNET \n","    with Transpose Convolution instead of Nearest Neighbour interpolation.\n","  \"\"\"\n","  ft_input = Input(input_shape)\n","  img_input = Input(input_shape_128)\n","  #final_input = UpSampling2D((4, 4), interpolation='bilinear')(img_input)\n","  \n","  # Image wing\n","  #down sampling \n","  i0 = Conv2D(fn, 4, strides=2, padding = 'same')(img_input)\n","  i0 = LeakyReLU(alpha=0.2)(i0) # (64)\n","  \n","  i1 = Conv2D(fn, 4,strides=2, padding = 'same')(i0)\n","  i1 = BatchNormalization(momentum=0.8)(i1)\n","  i1 = LeakyReLU(alpha=0.2)(i1)\n","\n","  i2 = Conv2D(2*fn, 4, strides=2, padding = 'same')(i1)\n","  i2 = BatchNormalization(momentum=0.8)(i2)\n","  i2 = LeakyReLU(alpha=0.2)(i2) #(32)\n","  \n","  i3 = Conv2D(4*fn, 4, strides=2, padding = 'same')(i2)\n","  i3 = BatchNormalization(momentum=0.8)(i3)\n","  i3 = LeakyReLU(alpha=0.2)(i3) #(16)\n","  \n","  i4 = Conv2D(8*fn, 4, strides=2, padding = 'same')(i3)\n","  i4 = BatchNormalization(momentum=0.8)(i4)\n","  i4 = LeakyReLU(alpha=0.2)(i4) #(8)\n","  \n","  i5 = Conv2D(8*fn, 4, strides=2, padding = 'same')(i4)\n","  i5 = BatchNormalization(momentum=0.8)(i5)\n","  i5 = LeakyReLU(alpha=0.2)(i5) #(4)\n","  \n","  # i6 = Conv2D(8*fn, 4, strides=2, padding = 'same')(i5)\n","  # i6 = BatchNormalization(momentum=0.8)(i6)\n","  # i6 = LeakyReLU(alpha=0.2)(i6) #(2)\n","  \n","  # i7 = Conv2D(8*fn, 4, strides=2, padding = 'same')(i6)\n","  # i7 = BatchNormalization(momentum=0.8)(i7)\n","  # i7 = LeakyReLU(alpha=0.2)(i7) #(1)\n","  \n","  # i8 = Conv2D(8*fn, 4, strides=2, padding = 'same')(i7)\n","  # i8 = BatchNormalization(momentum=0.8)(i8)\n","  # i8 = LeakyReLU(alpha=0.2)(i8)\n","  \n","\n","  # features wing\n","  #down sampling \n","  conv1 = Conv2D(8*fn, 4, strides=2, padding = 'same')(ft_input)\n","  act1  = LeakyReLU(alpha=0.2)(conv1) # (4)\n","  \n","  # conv2 = Conv2D(2*fn, 4, strides=2, padding = 'same')(act1)\n","  # conv2 = BatchNormalization(momentum=0.8)(conv2)\n","  # act2  = LeakyReLU(alpha=0.2)(conv2) #(32)\n","  \n","  # conv3 = Conv2D(4*fn, 4, strides=2, padding = 'same')(act2)\n","  # conv3 = BatchNormalization(momentum=0.8)(conv3)\n","  # act3  = LeakyReLU(alpha=0.2)(conv3) #(16)\n","  \n","  # conv4 = Conv2D(8*fn, 4, strides=2, padding = 'same')(act3)\n","  # conv4 = BatchNormalization(momentum=0.8)(conv4)\n","  # act4  = LeakyReLU(alpha=0.2)(conv4) #(8)\n","  \n","  # conv5 = Conv2D(8*fn, 4, strides=2, padding = 'same')(act4)\n","  # conv5 = BatchNormalization(momentum=0.8)(conv5)\n","  # act5  = LeakyReLU(alpha=0.2)(conv5) #(4)\n","  \n","  conv6 = Conv2D(8*fn, 4, strides=2, padding = 'same')(act1)\n","  conv6 = BatchNormalization(momentum=0.8)(conv6)\n","  act6  = LeakyReLU(alpha=0.2)(conv6) #(2)\n","  \n","  conv7 = Conv2D(8*fn, 4, strides=2, padding = 'same')(act6)\n","  conv7 = BatchNormalization(momentum=0.8)(conv7)\n","  act7  = LeakyReLU(alpha=0.2)(conv7) #(1)\n","  \n","  # conv8 = Conv2D(8*fn, 4, strides=2, padding = 'same')(act7)\n","  # conv8 = BatchNormalization(momentum=0.8)(conv8)\n","  # act8  = LeakyReLU(alpha=0.2)(conv8)\n","  \n","  #up sampling\n","  conv9 = Conv2DTranspose(8*fn, 4, strides=2, padding='same')(act7)\n","  conv9 = BatchNormalization(momentum=0.8)(conv9)\n","  conv9 = Dropout(rate=0.5)(conv9)\n","  conv9 = Concatenate(axis = 3)([conv9,i5])\n","  act9  = Activation('relu')(conv9) #(2)\n","  \n","  \n","  conv10 = Conv2DTranspose(8*fn, 4, strides=2, padding='same')(act9)\n","  conv10 = BatchNormalization(momentum=0.8)(conv10)\n","  conv10 = Dropout(rate=0.5)(conv10)\n","  conv10  = Concatenate(axis = 3)([conv10, i4])\n","  act10  = Activation('relu')(conv10) #(4)\n","  \n","  \n","  conv11 = Conv2DTranspose(8*fn, 4, strides=2, padding='same')(act10)\n","  conv11 = BatchNormalization(momentum=0.8)(conv11)\n","  conv11 = Dropout(rate=0.5)(conv11)\n","  conv11  = Concatenate(axis = 3)([conv11,i3])\n","  act11  = Activation('relu')(conv11) #(8)\n","  \n","  \n","  conv12 = Conv2DTranspose(4*fn, 4, strides=2, padding='same')(act11)\n","  conv12 = BatchNormalization(momentum=0.8)(conv12)\n","  conv12 = Concatenate(axis = 3)([conv12,i2])\n","  act12  = Activation('relu')(conv12) #(16)\n","  \n","  \n","  conv13 = Conv2DTranspose(2*fn, 4, strides=2, padding='same')(act12)\n","  conv13 = BatchNormalization(momentum=0.8)(conv13)\n","  conv13 = Concatenate(axis = 3)([conv13,i1])\n","  act13  = Activation('relu')(conv13) #(32)\n","  \n","  \n","  conv14 = Conv2DTranspose(fn, 4, strides=2, padding='same')(act13)\n","  conv14 = BatchNormalization(momentum=0.8)(conv14)\n","  conv14 = Concatenate(axis = 3)([conv14,i0])\n","  act14  = Activation('relu')(conv14) #(64)\n","  \n","  \n","  conv15 = Conv2DTranspose( fn, 4, strides=2, padding='same')(act14)\n","  conv15 = BatchNormalization(momentum=0.8)(conv15)\n","  conv15 = Concatenate(axis = 3)([conv15,img_input])\n","  act15  = Activation('relu')(conv15) #(128)\n","\n","  \n","  conv16 = Conv2DTranspose( fn, 4, strides=2, padding='same')(act15)\n","  conv16 = BatchNormalization(momentum=0.8)(conv16)\n","  act16  = Activation('relu')(conv16) #(256)\n","  \n","  \n","  \n","  conv17 = Conv2DTranspose( 1, 4, strides=2, padding='same')(act16)\n","  conv17 = Activation('tanh')(conv17) #(512)\n","  \n","  output = conv17\n","  model = Model(inputs = [ft_input, img_input], outputs = output)\n","  \n","  return model\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"x78oQT7ydIB-","colab_type":"code","outputId":"323de4e7-210a-4467-849a-37eb00383301","executionInfo":{"status":"ok","timestamp":1580897604580,"user_tz":-60,"elapsed":1865,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["# input_shape = (256,256,1) # to change\n","generator = similar_unet(fn=64)\n","generator.summary()"],"execution_count":18,"outputs":[{"output_type":"stream","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_7 (InputLayer)            [(None, 128, 128, 1) 0                                            \n","__________________________________________________________________________________________________\n","conv2d_14 (Conv2D)              (None, 64, 64, 64)   1088        input_7[0][0]                    \n","__________________________________________________________________________________________________\n","leaky_re_lu_13 (LeakyReLU)      (None, 64, 64, 64)   0           conv2d_14[0][0]                  \n","__________________________________________________________________________________________________\n","conv2d_15 (Conv2D)              (None, 32, 32, 64)   65600       leaky_re_lu_13[0][0]             \n","__________________________________________________________________________________________________\n","batch_normalization_12 (BatchNo (None, 32, 32, 64)   256         conv2d_15[0][0]                  \n","__________________________________________________________________________________________________\n","leaky_re_lu_14 (LeakyReLU)      (None, 32, 32, 64)   0           batch_normalization_12[0][0]     \n","__________________________________________________________________________________________________\n","input_6 (InputLayer)            [(None, 7, 7, 2048)] 0                                            \n","__________________________________________________________________________________________________\n","conv2d_16 (Conv2D)              (None, 16, 16, 128)  131200      leaky_re_lu_14[0][0]             \n","__________________________________________________________________________________________________\n","conv2d_20 (Conv2D)              (None, 4, 4, 512)    16777728    input_6[0][0]                    \n","__________________________________________________________________________________________________\n","batch_normalization_13 (BatchNo (None, 16, 16, 128)  512         conv2d_16[0][0]                  \n","__________________________________________________________________________________________________\n","leaky_re_lu_19 (LeakyReLU)      (None, 4, 4, 512)    0           conv2d_20[0][0]                  \n","__________________________________________________________________________________________________\n","leaky_re_lu_15 (LeakyReLU)      (None, 16, 16, 128)  0           batch_normalization_13[0][0]     \n","__________________________________________________________________________________________________\n","conv2d_21 (Conv2D)              (None, 2, 2, 512)    4194816     leaky_re_lu_19[0][0]             \n","__________________________________________________________________________________________________\n","conv2d_17 (Conv2D)              (None, 8, 8, 256)    524544      leaky_re_lu_15[0][0]             \n","__________________________________________________________________________________________________\n","batch_normalization_17 (BatchNo (None, 2, 2, 512)    2048        conv2d_21[0][0]                  \n","__________________________________________________________________________________________________\n","batch_normalization_14 (BatchNo (None, 8, 8, 256)    1024        conv2d_17[0][0]                  \n","__________________________________________________________________________________________________\n","leaky_re_lu_20 (LeakyReLU)      (None, 2, 2, 512)    0           batch_normalization_17[0][0]     \n","__________________________________________________________________________________________________\n","leaky_re_lu_16 (LeakyReLU)      (None, 8, 8, 256)    0           batch_normalization_14[0][0]     \n","__________________________________________________________________________________________________\n","conv2d_22 (Conv2D)              (None, 1, 1, 512)    4194816     leaky_re_lu_20[0][0]             \n","__________________________________________________________________________________________________\n","conv2d_18 (Conv2D)              (None, 4, 4, 512)    2097664     leaky_re_lu_16[0][0]             \n","__________________________________________________________________________________________________\n","batch_normalization_18 (BatchNo (None, 1, 1, 512)    2048        conv2d_22[0][0]                  \n","__________________________________________________________________________________________________\n","batch_normalization_15 (BatchNo (None, 4, 4, 512)    2048        conv2d_18[0][0]                  \n","__________________________________________________________________________________________________\n","leaky_re_lu_21 (LeakyReLU)      (None, 1, 1, 512)    0           batch_normalization_18[0][0]     \n","__________________________________________________________________________________________________\n","leaky_re_lu_17 (LeakyReLU)      (None, 4, 4, 512)    0           batch_normalization_15[0][0]     \n","__________________________________________________________________________________________________\n","conv2d_transpose_1 (Conv2DTrans (None, 2, 2, 512)    4194816     leaky_re_lu_21[0][0]             \n","__________________________________________________________________________________________________\n","conv2d_19 (Conv2D)              (None, 2, 2, 512)    4194816     leaky_re_lu_17[0][0]             \n","__________________________________________________________________________________________________\n","batch_normalization_19 (BatchNo (None, 2, 2, 512)    2048        conv2d_transpose_1[0][0]         \n","__________________________________________________________________________________________________\n","batch_normalization_16 (BatchNo (None, 2, 2, 512)    2048        conv2d_19[0][0]                  \n","__________________________________________________________________________________________________\n","dropout_1 (Dropout)             (None, 2, 2, 512)    0           batch_normalization_19[0][0]     \n","__________________________________________________________________________________________________\n","leaky_re_lu_18 (LeakyReLU)      (None, 2, 2, 512)    0           batch_normalization_16[0][0]     \n","__________________________________________________________________________________________________\n","concatenate_1 (Concatenate)     (None, 2, 2, 1024)   0           dropout_1[0][0]                  \n","                                                                 leaky_re_lu_18[0][0]             \n","__________________________________________________________________________________________________\n","activation (Activation)         (None, 2, 2, 1024)   0           concatenate_1[0][0]              \n","__________________________________________________________________________________________________\n","conv2d_transpose_2 (Conv2DTrans (None, 4, 4, 512)    8389120     activation[0][0]                 \n","__________________________________________________________________________________________________\n","batch_normalization_20 (BatchNo (None, 4, 4, 512)    2048        conv2d_transpose_2[0][0]         \n","__________________________________________________________________________________________________\n","dropout_2 (Dropout)             (None, 4, 4, 512)    0           batch_normalization_20[0][0]     \n","__________________________________________________________________________________________________\n","concatenate_2 (Concatenate)     (None, 4, 4, 1024)   0           dropout_2[0][0]                  \n","                                                                 leaky_re_lu_17[0][0]             \n","__________________________________________________________________________________________________\n","activation_1 (Activation)       (None, 4, 4, 1024)   0           concatenate_2[0][0]              \n","__________________________________________________________________________________________________\n","conv2d_transpose_3 (Conv2DTrans (None, 8, 8, 512)    8389120     activation_1[0][0]               \n","__________________________________________________________________________________________________\n","batch_normalization_21 (BatchNo (None, 8, 8, 512)    2048        conv2d_transpose_3[0][0]         \n","__________________________________________________________________________________________________\n","dropout_3 (Dropout)             (None, 8, 8, 512)    0           batch_normalization_21[0][0]     \n","__________________________________________________________________________________________________\n","concatenate_3 (Concatenate)     (None, 8, 8, 768)    0           dropout_3[0][0]                  \n","                                                                 leaky_re_lu_16[0][0]             \n","__________________________________________________________________________________________________\n","activation_2 (Activation)       (None, 8, 8, 768)    0           concatenate_3[0][0]              \n","__________________________________________________________________________________________________\n","conv2d_transpose_4 (Conv2DTrans (None, 16, 16, 256)  3145984     activation_2[0][0]               \n","__________________________________________________________________________________________________\n","batch_normalization_22 (BatchNo (None, 16, 16, 256)  1024        conv2d_transpose_4[0][0]         \n","__________________________________________________________________________________________________\n","concatenate_4 (Concatenate)     (None, 16, 16, 384)  0           batch_normalization_22[0][0]     \n","                                                                 leaky_re_lu_15[0][0]             \n","__________________________________________________________________________________________________\n","activation_3 (Activation)       (None, 16, 16, 384)  0           concatenate_4[0][0]              \n","__________________________________________________________________________________________________\n","conv2d_transpose_5 (Conv2DTrans (None, 32, 32, 128)  786560      activation_3[0][0]               \n","__________________________________________________________________________________________________\n","batch_normalization_23 (BatchNo (None, 32, 32, 128)  512         conv2d_transpose_5[0][0]         \n","__________________________________________________________________________________________________\n","concatenate_5 (Concatenate)     (None, 32, 32, 192)  0           batch_normalization_23[0][0]     \n","                                                                 leaky_re_lu_14[0][0]             \n","__________________________________________________________________________________________________\n","activation_4 (Activation)       (None, 32, 32, 192)  0           concatenate_5[0][0]              \n","__________________________________________________________________________________________________\n","conv2d_transpose_6 (Conv2DTrans (None, 64, 64, 64)   196672      activation_4[0][0]               \n","__________________________________________________________________________________________________\n","batch_normalization_24 (BatchNo (None, 64, 64, 64)   256         conv2d_transpose_6[0][0]         \n","__________________________________________________________________________________________________\n","concatenate_6 (Concatenate)     (None, 64, 64, 128)  0           batch_normalization_24[0][0]     \n","                                                                 leaky_re_lu_13[0][0]             \n","__________________________________________________________________________________________________\n","activation_5 (Activation)       (None, 64, 64, 128)  0           concatenate_6[0][0]              \n","__________________________________________________________________________________________________\n","conv2d_transpose_7 (Conv2DTrans (None, 128, 128, 64) 131136      activation_5[0][0]               \n","__________________________________________________________________________________________________\n","batch_normalization_25 (BatchNo (None, 128, 128, 64) 256         conv2d_transpose_7[0][0]         \n","__________________________________________________________________________________________________\n","concatenate_7 (Concatenate)     (None, 128, 128, 65) 0           batch_normalization_25[0][0]     \n","                                                                 input_7[0][0]                    \n","__________________________________________________________________________________________________\n","activation_6 (Activation)       (None, 128, 128, 65) 0           concatenate_7[0][0]              \n","__________________________________________________________________________________________________\n","conv2d_transpose_8 (Conv2DTrans (None, 256, 256, 64) 66624       activation_6[0][0]               \n","__________________________________________________________________________________________________\n","batch_normalization_26 (BatchNo (None, 256, 256, 64) 256         conv2d_transpose_8[0][0]         \n","__________________________________________________________________________________________________\n","activation_7 (Activation)       (None, 256, 256, 64) 0           batch_normalization_26[0][0]     \n","__________________________________________________________________________________________________\n","conv2d_transpose_9 (Conv2DTrans (None, 512, 512, 1)  1025        activation_7[0][0]               \n","__________________________________________________________________________________________________\n","activation_8 (Activation)       (None, 512, 512, 1)  0           conv2d_transpose_9[0][0]         \n","==================================================================================================\n","Total params: 57,501,761\n","Trainable params: 57,492,545\n","Non-trainable params: 9,216\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YdfZBT9xdT4l","colab_type":"code","outputId":"0e005512-a62c-4d91-a8fb-1da22f709d55","executionInfo":{"status":"ok","timestamp":1580897612538,"user_tz":-60,"elapsed":1016,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}},"colab":{"base_uri":"https://localhost:8080/","height":748}},"source":["def build_discriminator(input_shape, output_shape, fn):\n","  img_A = Input(shape=input_shape_GAN)\n","  img_B = Input(shape=output_shape)\n","  \n","  #y = ZeroPadding2D((1,1))(img_A)\n","  y = Conv2D(8*fn, kernel_size=3, strides=2, padding=\"same\")(img_A)\n","  y = UpSampling2D((8, 8), interpolation='bilinear')(y)\n","\n","  x = Conv2D(  fn, kernel_size=3, strides=2, padding=\"same\")(img_B)\n","  x = Activation('relu')(x) #(256)\n","  x = Conv2D(2*fn, kernel_size=3, strides=2, padding=\"same\")(x)\n","  x = BatchNormalization(momentum=0.8)(x)\n","  x = Activation('relu')(x) #(128)\n","  x = Conv2D(4*fn, kernel_size=3, strides=2, padding=\"same\")(x)\n","  x = BatchNormalization(momentum=0.8)(x)\n","  x = Activation('relu')(x) #(64)\n","  x = Conv2D(8*fn, kernel_size=3, strides=2, padding=\"same\")(x)\n","  x = BatchNormalization(momentum=0.8)(x)\n","  x = Activation('relu')(x) #(32)\n","\n","  \n","  x = Concatenate(axis=-1)([x, y])\n","\n","  x = Conv2D(   1, kernel_size=3, strides=1, padding=\"same\",  activation='sigmoid')(x)\n","  \n","  model = Model([img_A, img_B], x)\n","\n","  return model\n","output_shape = (output_x, output_y, 1)\n","discriminator = build_discriminator(input_shape_GAN, output_shape, fn = 64)\n","discriminator.summary()\n"],"execution_count":19,"outputs":[{"output_type":"stream","text":["Model: \"model_1\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_9 (InputLayer)            [(None, 512, 512, 1) 0                                            \n","__________________________________________________________________________________________________\n","conv2d_24 (Conv2D)              (None, 256, 256, 64) 640         input_9[0][0]                    \n","__________________________________________________________________________________________________\n","activation_9 (Activation)       (None, 256, 256, 64) 0           conv2d_24[0][0]                  \n","__________________________________________________________________________________________________\n","conv2d_25 (Conv2D)              (None, 128, 128, 128 73856       activation_9[0][0]               \n","__________________________________________________________________________________________________\n","batch_normalization_27 (BatchNo (None, 128, 128, 128 512         conv2d_25[0][0]                  \n","__________________________________________________________________________________________________\n","activation_10 (Activation)      (None, 128, 128, 128 0           batch_normalization_27[0][0]     \n","__________________________________________________________________________________________________\n","conv2d_26 (Conv2D)              (None, 64, 64, 256)  295168      activation_10[0][0]              \n","__________________________________________________________________________________________________\n","batch_normalization_28 (BatchNo (None, 64, 64, 256)  1024        conv2d_26[0][0]                  \n","__________________________________________________________________________________________________\n","activation_11 (Activation)      (None, 64, 64, 256)  0           batch_normalization_28[0][0]     \n","__________________________________________________________________________________________________\n","conv2d_27 (Conv2D)              (None, 32, 32, 512)  1180160     activation_11[0][0]              \n","__________________________________________________________________________________________________\n","input_8 (InputLayer)            [(None, 7, 7, 2048)] 0                                            \n","__________________________________________________________________________________________________\n","batch_normalization_29 (BatchNo (None, 32, 32, 512)  2048        conv2d_27[0][0]                  \n","__________________________________________________________________________________________________\n","conv2d_23 (Conv2D)              (None, 4, 4, 512)    9437696     input_8[0][0]                    \n","__________________________________________________________________________________________________\n","activation_12 (Activation)      (None, 32, 32, 512)  0           batch_normalization_29[0][0]     \n","__________________________________________________________________________________________________\n","up_sampling2d (UpSampling2D)    (None, 32, 32, 512)  0           conv2d_23[0][0]                  \n","__________________________________________________________________________________________________\n","concatenate_8 (Concatenate)     (None, 32, 32, 1024) 0           activation_12[0][0]              \n","                                                                 up_sampling2d[0][0]              \n","__________________________________________________________________________________________________\n","conv2d_28 (Conv2D)              (None, 32, 32, 1)    9217        concatenate_8[0][0]              \n","==================================================================================================\n","Total params: 11,000,321\n","Trainable params: 10,998,529\n","Non-trainable params: 1,792\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"E5ZyLSzFdW02","colab_type":"code","colab":{}},"source":["# Algorithm of optimization\n","optimizer = optimizers.Adam(0.0002, 0.5)\n","\n","# Compile the discriminator\n","discriminator.trainable = True\n","discriminator.compile(loss='binary_crossentropy', \\\n","                      optimizer=optimizer, metrics=['accuracy'])\n","\n","\n","# Input images and their conditioning images\n","ft_x = Input(shape=input_shape_GAN)\n","img_x = Input(shape = input_shape_128)\n","    \n","# The generator \n","img_y = generator([ft_x, img_x])\n","\n","# For the combined model we will only train the generator\n","discriminator.trainable = False\n","\n","# The discriminator takes generated images as input and determines validity\n","valid = discriminator([ft_x, img_y])\n","\n","# The combined model  (stacked generator and discriminator)\n","# Trains the generator to fool the discriminator\n","combined = Model([ft_x,img_x], (valid,img_y))\n","combined.compile(loss=['binary_crossentropy', 'mae'], \\\n","                 loss_weights=[1, 100], optimizer=optimizer, metrics=['accuracy'])\n","# 'mae' is for \"mean absolute error\"\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Q2D_Oq6WXX3n","colab_type":"code","colab":{}},"source":["def show_imgs(*list_images):\n","  import matplotlib.pyplot as plt \n","  from IPython.display import clear_output\n","  c = len(list_images)\n","  r = len(list_images[0])\n","  fig = plt.figure(figsize=(3*c,3*r))\n","  axs = fig.subplots(r, c)\n","  for i in range(r):\n","    for j in range(c):\n","      img = list_images[j][i]\n","      img = (128 * img +128).clip(0,255).astype(np.uint8)\n","      axs[i,j].imshow(img[:,:,0],'gray')\n","      axs[i,j].axis('off')\n","          \n","  clear_output(wait=True)\n","  plt.show()\n","  "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"COYC5DwudyDH","colab_type":"code","outputId":"0287686a-5ae4-4445-90e1-c5c67a2193eb","executionInfo":{"status":"error","timestamp":1580898658731,"user_tz":-60,"elapsed":12090,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["batch_size = 2\n","epochs = 200\n","\n","train_steps = len(ft_train) // batch_size # train_files = 650\n","valid_steps = len(ft_val) // batch_size # valid_files = 83\n"," \n","\n","# Adversarial ground truths\n","valid = np.ones((batch_size, 32,32,1))\n","fake = np.zeros((batch_size, 32,32,1))\n","\n","train_inds = list(range(len(ft_train))) # 650\n","for epoch in range(epochs):\n","  \n","  \n","  # ---------------------\n","  #  Show generated images\n","  # ---------------------\n","\n","  # generate images\n","  imgs,ft, msk = y_val[[0,5,10,15,20]], ft_val[[0,5,10,15,20]], mask_val[[0,5,10,15,20]] # take 5 examples\n","  gen_imgs = generator.predict([ft, msk])\n","\n","  # show generated images\n","  show_imgs(imgs, msk, gen_imgs) ### to define\n","  print('\\tGenerated after %d epoches'% epoch)\n","  print()\n","  \n","  np.random.shuffle(train_inds)\n","  for index in range(train_steps):\n","\n","    idx = train_inds[(index*batch_size):(index*batch_size+batch_size)]\n","\n","    # imgs = [y_train[el] for el in idx]\n","    # msk = [x_train[el] for el in idx]\n","    imgs = y_train[[idx]]\n","    ft = ft_train[[idx]]\n","    msk = mask_train[[idx]]\n","    # generate a batch of new images\n","    gen_imgs = generator.predict([ft, msk])\n","    \n","    discriminator.trainable = True\n","    d_loss_real = discriminator.train_on_batch([ft, imgs], valid)\n","    d_loss_fake = discriminator.train_on_batch([ft, gen_imgs], fake)\n","    d_loss = 0.5 * np.add(d_loss_real, d_loss_fake)\n","  \n","    # ---------------------\n","    #  Train Generator\n","    # ---------------------\n","\n","    # Train the generator (wants discriminator to mistake images as real)\n","    discriminator.trainable = False\n","    g_loss = combined.train_on_batch([ft, msk], [valid, imgs])\n","\n","    # Print the progress\n","    print(\"\\r%5d/%5d [D loss: %5f, acc.: %.2f%%] [G loss: %5f, mae: %5f, acc.: %.2f%%]\" % (epoch, index, d_loss[0], 100*d_loss[1], g_loss[1], g_loss[2], 100*g_loss[3]) , end='')\n","\n"," "],"execution_count":22,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAf0AAAM9CAYAAACWu6oVAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAAgAElEQVR4nOydS4xj6XXfD4uPKlZ1s3q6ama6Zc3Y\nY3ssaSBFkmc0iiU73thAnIc3QbJI4IUWUSAgyEabWWWRTWYRAXYQwIi1sAHDQLzIxgngjQE7ji3A\njiMbssfxyJ5Hukfpmriq3GRPkVV8ZtH53/rfw++7vKxikby8/x9QIIu8vPey+9R3vvOuTCYTE0II\nIcTms7XqGxBCCCHEcpDSF0IIIUqClL4QQghREqT0hRBCiJIgpS+EEEKUhFrWm5VKRan9Yi4mk0ll\n1ffASIbFvKybDJtJjsX8xORYlr4QQghREqT0hRBCiJIgpS+EEEKUBCl9IYQQoiRI6QshhBAlQUpf\nCCGEKAlS+kIIIURJkNIXQgghSoKUvhBCCFESpPSFEEKIkiClL4QQQpQEKX0hhBCiJEjpCyGEECUh\nc8reqmm321f+7P7+fvQ8+/v7dnx8bGZmh4eHV76GEFlcR37NsmXYzGwwGJiZZFjcHJVKxb7whS/Y\n/fv3rdvt2snJiX300Uf23HPP2fHxsY3HY7tz5451u1176aWXrNVq2f/6X//L6vW61et1+/M//3M7\nPT01M7N6vW6f+cxn7PT01F566SXb29uzP/uzP7Nbt25Zv9+3d955x0aj0Yq/8eZTmUziExtXMc7x\nugtlXrBgxn6/f//+Uu5j01i3saTLluFlya9ZWma9/ALJ8fysmwybLV+O79+/b6+++qrdunXLhsOh\nmZlNJhOrVCq2tTXtIB6Px6nfoVeq1Wry/tbWlm1tbdl4PE6OxzlxPL9Xq9Ws3+/bf//v/90eP358\nM190g4nJ8doo/WUulmazlT6jhTM/67ZgSulLdudl3WTYbHlyXKlU7Cd+4ifsueees62tLRuNRiml\njOeVytN/opD+iB0T+oxX+GA4HKY2CVtbW/bXf/3X9nu/93s38K03k7VW+stW+GbzKX0zLZ55WbcF\nsywyPEt+zSTDeVk3GTa7eTmuVCr25S9/2Z5//nkzu7TMoahjeP3hFf6s4wCuh+dQ+vx+rVazra0t\n+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\npS+EEEKUBCl9IYQQoiRI6QshhFgIlcrazSoSjswpe6vmD//wD2ceMxwOg69/6UtfSp5/61vfmnoP\nr/FxQiySPPJrdjUZjh0nxCKpVCr2yiuv2HPPPWcXFxfWbrftyZMndnh4aKenp2Zm1mq17Pz83O7f\nv2+3bt2yd955xxqNhm1tbdl7771n7XbbzMzq9br9yI/8iLXbbbt37541Gg1755137Pbt2zYcDu3h\nw4c2Go1S155MNFxw0VSy/lFXMc4x70IJYgtmXgaDQfD1n/zJn7zWecvKuo0lXbYMzyu/Zjcnw2aS\n46uwbjJstnw5fvbZZ+3Tn/607ezsJIp4PB7b1tZW0JqfTCY2Ho+T3/GZer2e+izgY/l4plqt2mAw\nsG9/+9v25MmT63+pkhGT47Wx9K+yWN4k/+2//bfkuRZOIUQZqFQq9vnPf96effZZM7OUwgdsKOL1\n0Whk1Wo1eQy974/hRw8+t7W1Za+99pqZmbXbbfv2t7+9yK9bStbC0r+Owr9JK4mR4s/HullJkuFL\nJMP5WDcZNrt5Oa5UKvajP/qj9swzz5jZpbJnBc5sbW0FLfu8xJQ9YKXPz83M/uiP/kiWfw5icrxS\npb8I635ZCybQwpnNui2YkuE0kt/ZrJsMm92sHFerVfuxH/sxu337to3HY+v3+ylL3Ct4Jsta99eY\nZ2MQCgfw791u1/7gD/4g9/nKSEyOV5a9v27ufCHmpYgyzGErIczMnn/+edvb20sUO6x7VtRwzwMo\n4JgnIA9Znw0p/PF4bOPx2KrVqu3v79snP/nJK1+7zKhkb060aIqiIxkWoFqt2iuvvJL8PplMEgXv\n4/mspJHM5zcDsWuEjokl7+Ga7F2A4t/a2rLRaGSDwcBefPHFvF9TECtR+kW0kBgtmqLoMiyEmdnH\nP/5xM3uq7JGBX61Wkx+zp1Y3K+6trS2bTCbJ67wZCFnvsU1B1rFQ8PzcbwQGg4H9+I//+FW+dqlZ\nutLflMUyq25aiHXnW9/6lmS45Ny9e9c+8YlPJL9z3DyUyBfKyuf3QkqcQwXXhTcCYGdnRw2B5kTu\n/Tmp1+tWr9etVlubakexZIq+cYX8SobLS6VSsc9+9rMphckKNUvB+2M5HBCz6ufN7o9dl1/DPb76\n6qtzn7vMSOnPARpNaLEURSS0Yf3TP/3TFd6RWBXb29vWaDSm4vZs7XurOgRc/FgbQ/hwAR5nbQS4\n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\nbWyhH0ak/EoBHrO2bxMGHzx4gIODg6iXL9YHloImfumaxWfg28S+ZrOZeuuhYjt+OR/D7+12O1M3\nn59P7z5JkuCAxN9XkiTp9ASjA1b0bT19wvsNffc5ZenTcxmpqOIAoDIxCnZWVuBtp5Y3V2rn5G3Y\nlMfZaSZJgtFolM47hUaRNnmQnWev18PR0VEmB0AIuy6/2+2mg1Yv+n4gGRq42iqU9hrMa7Hz77Rh\nP8AI3Rsfe71eGqnq9/szNlzlcKaY5f79+xnh93PrXtBsSJ9Cb9/zyX+h69qd8hhWt7vesc1kMskM\nOGPXpuc9Go0ydfLZB4cEn8TE2g4w/I6CdsmgzWeoGqX8Tw6F9dvtdqbTnOdt8Q+ft+7ezt/7js56\nUh67NARA6mWFkv6EIBRhv0lUzFbsANIOAPyxWGnq7e3taA4Mp8mAJ4OEo6OjqOCL9ePZZ5+dyY7n\now/p24I1NnnOztn7REC//M6WuiXtdntmCR37T04zUFw7nQ5Go9HM+fY8AJk5/Fj9AS/mFivkoTb2\nXuXpF2AZQkjBnxcWBZB2YPY9Go4dTXoP3Ybk8+6f16eX5TOki0QiRLX4gz/4g+DxIn/fedEqa29+\n0Oqz6K0deztnlCoUreJn+kTVo6OjzBRX6H9MrA+bm5sZb9UKfEzIKIJ+Db719Imt1AechfVtjX47\nuPR1/DnvT0/d/m/YZENem+f6SpMhLz8m+Pb3EPL07bmtVgsbGxvBzbfKTmXK8JKQF2LDoewobVif\n1Zi4ZzIF389b+jK/oTKlocFG6FqXhWqYXy0UQ/9ThDwb8TbsvXhrw7ayWGhga6/pbTh0r/bz/HW4\nhapYL7i7Y2z9u/2xZaMJBd7P7/M9+8MBKkWZhXOs3dEzt6WAfSKgHTR4/LK+GH6JXmhJnk/gC5UO\nHo1GeP7556OfU2ZK/d9sDS2vyI3vKCn8FHw74rSdq4XeeSzkys6dSYU+1OTvJ28+VdQHa8M2H8Qe\nA84Gs1bEKfYAZuY5Y4NVIF7CmhX/bCIfEN62NzRFJc9/PWg0GqmHaoU9VqkOmA2J2wx8L7K+mp7N\nvPeCHRJwO3jwVQJtHXy2ZdSA15+37a6dpvD3Yqcy/Hx+2WvuF6UyqpQkZyVLvUdiQ/M2HErBDw0U\nbMdHA8hLetrd3c3ssuTX9quIiZiHzzGxU0F83w5cmX3MtpY8QQ61tYWqfPY+k1FFPZhOp7h58yYO\n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\n","text/plain":["<Figure size 648x1080 with 15 Axes>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\tGenerated after 14 epoches\n","\n","   14/   78 [D loss: 0.000392, acc.: 100.00%] [G loss: 0.033542, mae: 0.002323]"],"name":"stdout"},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-22-ee610864e5ae>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0mdiscriminator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrainable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m     \u001b[0md_loss_real\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdiscriminator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_on_batch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimgs\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalid\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 44\u001b[0;31m     \u001b[0md_loss_fake\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdiscriminator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_on_batch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgen_imgs\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfake\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     45\u001b[0m     \u001b[0md_loss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0.5\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0md_loss_real\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0md_loss_fake\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tensorflow-2.1.0/python3.6/tensorflow_core/python/keras/engine/training.py\u001b[0m in \u001b[0;36mtrain_on_batch\u001b[0;34m(self, x, y, sample_weight, class_weight, reset_metrics)\u001b[0m\n\u001b[1;32m   1076\u001b[0m           \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msample_weight\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1077\u001b[0m           \u001b[0mclass_weight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mclass_weight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreset_metrics\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mreset_metrics\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1078\u001b[0;31m           standalone=True)\n\u001b[0m\u001b[1;32m   1079\u001b[0m       outputs = (outputs['total_loss'] + outputs['output_losses'] +\n\u001b[1;32m   1080\u001b[0m                  outputs['metrics'])\n","\u001b[0;32m/tensorflow-2.1.0/python3.6/tensorflow_core/python/keras/engine/training_v2_utils.py\u001b[0m in \u001b[0;36mtrain_on_batch\u001b[0;34m(model, x, y, sample_weight, class_weight, reset_metrics, standalone)\u001b[0m\n\u001b[1;32m    431\u001b[0m       \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    432\u001b[0m       \u001b[0msample_weights\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msample_weights\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 433\u001b[0;31m       output_loss_metrics=model._output_loss_metrics)\n\u001b[0m\u001b[1;32m    434\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    435\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mreset_metrics\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tensorflow-2.1.0/python3.6/tensorflow_core/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    566\u001b[0m         \u001b[0mxla_context\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mExit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    567\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 568\u001b[0;31m       \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    569\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    570\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mtracing_count\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tensorflow-2.1.0/python3.6/tensorflow_core/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    597\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    598\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 599\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateless_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    600\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    601\u001b[0m       \u001b[0;31m# Release the lock early so that multiple threads can perform the call\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tensorflow-2.1.0/python3.6/tensorflow_core/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2361\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_lock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2362\u001b[0m       \u001b[0mgraph_function\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_maybe_define_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2363\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mgraph_function\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_filtered_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2364\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2365\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tensorflow-2.1.0/python3.6/tensorflow_core/python/eager/function.py\u001b[0m in \u001b[0;36m_filtered_call\u001b[0;34m(self, args, kwargs)\u001b[0m\n\u001b[1;32m   1609\u001b[0m          if isinstance(t, (ops.Tensor,\n\u001b[1;32m   1610\u001b[0m                            resource_variable_ops.BaseResourceVariable))),\n\u001b[0;32m-> 1611\u001b[0;31m         self.captured_inputs)\n\u001b[0m\u001b[1;32m   1612\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1613\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_call_flat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcancellation_manager\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tensorflow-2.1.0/python3.6/tensorflow_core/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1690\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1691\u001b[0m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0;32m-> 1692\u001b[0;31m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[0m\u001b[1;32m   1693\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1694\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tensorflow-2.1.0/python3.6/tensorflow_core/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    543\u001b[0m               \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    544\u001b[0m               \u001b[0mattrs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"executor_type\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexecutor_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"config_proto\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 545\u001b[0;31m               ctx=ctx)\n\u001b[0m\u001b[1;32m    546\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    547\u001b[0m           outputs = execute.execute_with_cancellation(\n","\u001b[0;32m/tensorflow-2.1.0/python3.6/tensorflow_core/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     59\u001b[0m     tensors = pywrap_tensorflow.TFE_Py_Execute(ctx._handle, device_name,\n\u001b[1;32m     60\u001b[0m                                                \u001b[0mop_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mattrs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 61\u001b[0;31m                                                num_outputs)\n\u001b[0m\u001b[1;32m     62\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","metadata":{"id":"RlvwYChb6P6W","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":357},"outputId":"b5bb0eaf-0570-4434-8983-7d9905186a7a","executionInfo":{"status":"ok","timestamp":1580899452075,"user_tz":-60,"elapsed":274,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}}},"source":["imgs,ft, msk = y_train[[0,43]], ft_train[[0,43]], mask_train[[0,43]]  # take 5 examples\n","gen_imgs = generator.predict([ft, msk])\n","show_imgs(imgs, msk, gen_imgs)"],"execution_count":32,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAgQAAAFUCAYAAABbZCT8AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAAgAElEQVR4nO2dS4yj2Vn+H3++lC9ll92euk3XVKcn\n0WSaTGaU22RERgMJKAKhKIsIEAlBgghYIKRISLBhyTZSJBYgWGSBEEQooAhBUMSOIBZR/qMhQhmG\nYbrppFPT3VOpq6t8939Rek693/H5bFd3VdmueX5SqVy+fN/n8utznvPeTmowGEAIIYQQ726iaV+A\nEEIIIaaPBIEQQgghJAiEEEIIIUEghBBCCEgQCCGEEAISBEIIIYQAkBn1YCqVUk2iODcGg0Hqss8p\nGxbnyTRsGJAdi/MlyY7lIRBCCCGEBIEQQgghJAiEEEIIAQkCIYQQQkCCQAghhBCQIBBCCCEEJAiE\nEEIIAQkCIYQQQkCCQAghhBCQIBBCCCEEJAiEEEIIAQkCIYQQQkCCQAghhBCQIBBCCCEEJAiEEEII\nAQkCIYQQQkCCQAghhBCQIBBCCCEEJAiEEEIIAQkCIYQQQkCCQAghhBCQIBBCCCEEJAiEEEIIAQkC\nIYQQQkCCQAghhBCQIBBCCCEEJAiEEEIIAQkCIYQQQkCCQAghhBCQIBBCCCEEJAiEEEIIAQkCIYQQ\nQkCCQAghhBCQIBBCCCEEJAiEEEIIAQkCIYQQQkCCQAghhBCQIBBCCHEGfu7nfm7alzDEJz/5yWlf\nwhC/8Au/MO1LGOILX/jCyMdTg8Eg+cFUKvlBIc7IYDBIXfY5ZcPiPJmGDQOyY3G+JNmxPARCCCGE\nkCAQQgghhASBEEIIISBBIIQQQghIEAghhBACEgRCCCGEgASBEEIIISBBIIQQQghIEAghhBACEgRC\nCCGEgASBEEIIISBBIIQQQghIEAghhBACEgRCCCGEgASBEEIIISBBIIQQQghIEAghhBACEgRCCCGE\ngASBEEIIISBBIIQQQghIEAghhBACEgRCCCGEgASBEEIIISBBIIQQQghIEAghhBACEgRCCCGEgASB\nEEIIISBBIIQQQghIEAghhBACEgRCCCGEgASBEEIIISBBIIQQQghIEAghhBACEgRCCCGEgASBEEII\nISBBIIQQ4gx89KMfnfYlDPHxj3982pcwxEsvvTTtSxji137t10Y+nhoMBskPplLJDwpxRgaDQeqy\nzykbFufJNGwYkB2L8yXJjuUhEEIIIYQEgRBCCCEkCIQQQggBCQIhhBBCQIJACCGEEJAgEEIIIQQk\nCIQQQggBCQIhhBBCQIJACCGEEJAgEEIIIQQkCIQQQggBCQIhhBBCQIJACCGEEJAgEEIIIQQkCIQQ\nQggBCQIhhBBCQIJACCGEEJAgEEIIIQQkCIQQQggBCQIhhBBCQIJACCGEEJAgEEIIIQQkCIQQQggB\nCQIhhBBCQIJACCGEEJAgEEIIIQQkCIQQQggBCQIhhBBCQIJACCGEEJAgEEIIIQQkCIQQQggBCQIh\nhBBCQIJACCGEEJAgEEIIIQQkCIQQQggBCQIhhBBn4OWXX572JQwxi9f06U9/etqXMMSv/MqvjHw8\nNRgMkh9MpZIfFOKMDAaD1GWfUzYszpNp2DAgOxbnS5Idy0MghBBCCAkCIYQQQkgQCCGEEAISBEII\nIYSABIEQQgghIEEghBBCCEgQCCGEEAISBEIIIYSABIEQQgghIEEghBBCCEgQCCGEEAISBEIIIYSA\nBIEQQgghIEEghBBCCEgQCCGEEAISBEIIIYSABIEQQgghIEEghBBCCEgQCCGEEAISBEIIIYSABIEQ\nQgghIEEghBBCCEgQCCGEEAISBEIIIYSABIEQQgghIEEghBBCCEgQCCGEEAISBEIIIYSABIEQQggh\nIEEghBBCCEgQCCGEEAISBEIIIYSABIEQQgghIEEghBBCCACpwWAw7WsQQgghxJSRh0AIIYQQEgRC\nCCGEkCAQQgghBCQIhBBCCAEJAiGEEEJAgkAIIYQQkCAQQgghBCQIhBBCCAEJAiGEEEJAgkAIIYQQ\nkCAQQgghBCQIhBBCCAEJAiGEEEJAgkAIIYQQkCAQQgghBCQIhBBCCAEJAiGEEEJAgkAIIYQQkCAQ\nQgghBCQIhBBCCAEJAiGEEEJAgkAIIYQQkCAQQgghBCQIhBBCCAEJAiGEEEJAgkAIIYQQkCAQQggh\nBCQIhBBCCAEJAiGEEEIAyIx6MJVKDS7rQsTVZzAYpC77nLJhcZ5Mw4YB2bE4X5LsWB4CIYQQQkgQ\nCCGEEEKCQAghhBCQIBBCCCEEJAiEEEIIAQkCIYQQQkCCQAghhBCQIBBCCCEEJAiEEEIIAQkCIYQQ\n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\n","text/plain":["<Figure size 648x432 with 6 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"B0DGjWec9VD5","colab_type":"code","colab":{}},"source":["def multivariate_data(dataset, target, start_index, end_index, history_size,\n","                      target_size, step, single_step=False):\n","  data = []\n","  labels = []\n","\n","  start_index = start_index + history_size\n","  if end_index is None:\n","    end_index = len(dataset) - target_size\n","\n","  for i in range(start_index, end_index):\n","    indices = range(i-history_size, i, step)\n","    data.append(dataset[indices])\n","\n","    if single_step:\n","      labels.append(target[i+target_size])\n","    else:\n","      labels.append(target[i:i+target_size])\n","\n","  return np.array(data), np.array(labels)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"aYHPcOxr_lKQ","colab_type":"code","colab":{}},"source":["ft_train = ft_train.reshape(900,7*7*2048)\n","ft_val = ft_val.reshape(49,7*7*2048)\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"NeKXcSGEO4mP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"9bc1ee1f-cde6-4f8d-bdd3-b77318ffb046","executionInfo":{"status":"ok","timestamp":1580906230098,"user_tz":-60,"elapsed":2195,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}}},"source":["# train_mean = ft_train.mean(axis=0)\n","# train_std = ft_train.std(axis=0)\n","# val_mean = ft_val.mean(axis=0)\n","# val_std = ft_val.std(axis=0)\n","\n","# ft_train = (ft_train-train_mean)/train_std\n","# ft_val = (ft_val-val_mean)/val_std\n","# ft_train = np.nan_to_num(ft_train)\n","# ft_val = np.nan_to_num(ft_val)"],"execution_count":13,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:6: RuntimeWarning: invalid value encountered in true_divide\n","  \n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:7: RuntimeWarning: invalid value encountered in true_divide\n","  import sys\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"qHVQEbWNQ4cl","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":136},"outputId":"6c7c2e57-2a70-41b3-e4ec-d14ce2aea539","executionInfo":{"status":"ok","timestamp":1580905957164,"user_tz":-60,"elapsed":545,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}}},"source":["ft_train"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       ...,\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32)"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"OEGdb_Rm9ay7","colab_type":"code","colab":{}},"source":["past_history = 20 # to change\n","future_target = 2 # to change\n","STEP = 1 # to change\n","\n","\n","x_train_multi, y_train_multi = multivariate_data(ft_train, ft_train, 0,\n","                                                   None, past_history,\n","                                                   future_target, STEP)\n","x_val_multi, y_val_multi = multivariate_data(ft_val, ft_val,\n","                                               0, None, past_history,\n","                                               future_target, STEP)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"-77d15eOGgIb","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"8HmCf0v7DReQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":136},"outputId":"472fe88c-8619-4cf5-ed84-f50ab557af0c","executionInfo":{"status":"ok","timestamp":1580906606866,"user_tz":-60,"elapsed":741,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}}},"source":["print ('Single window of past history : {}'.format(x_train_multi.shape))\n","print ('\\n Target window to predict : {}'.format(y_train_multi.shape))\n","print ('\\n Train data size : {}'.format(x_val_multi.shape))\n","print ('\\n Val data size : {}'.format(y_val_multi.shape))"],"execution_count":14,"outputs":[{"output_type":"stream","text":["Single window of past history : (878, 20, 100352)\n","\n"," Target window to predict : (878, 2, 100352)\n","\n"," Train data size : (27, 20, 100352)\n","\n"," Val data size : (27, 2, 100352)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3QR7toJVG_sY","colab_type":"code","colab":{}},"source":["y_train_multi = y_train_multi.reshape(878,2*100352)\n","y_val_multi = y_val_multi.reshape(27,2*100352)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"r3e-n8gq9hxo","colab_type":"code","colab":{}},"source":["BATCH_SIZE =  10 # to channge\n","BUFFER_SIZE = 10000 # to change\n","\n","train_data_multi = tf.data.Dataset.from_tensor_slices((x_train_multi, y_train_multi))\n","train_data_multi = train_data_multi.cache().shuffle(BUFFER_SIZE).batch(BATCH_SIZE).repeat()\n","\n","val_data_multi = tf.data.Dataset.from_tensor_slices((x_val_multi, y_val_multi))\n","val_data_multi = val_data_multi.batch(BATCH_SIZE).repeat()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_k4lFtyzGkko","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"EVRVOiQ99mUT","colab_type":"code","colab":{}},"source":["multi_step_model = tf.keras.models.Sequential()\n","multi_step_model.add(tf.keras.layers.LSTM(64,\n","                                          return_sequences=True,\n","                                          input_shape=x_train_multi.shape[-2:]))\n","multi_step_model.add(tf.keras.layers.LSTM(32, return_sequences=True, activation='relu'))\n","multi_step_model.add(tf.keras.layers.LSTM(16, activation='relu'))\n","multi_step_model.add(tf.keras.layers.Dense(2*100352))\n","\n","multi_step_model.compile(optimizer=tf.keras.optimizers.RMSprop(clipvalue=1.0), loss='mae')\n","# check network and input shape!"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"pY5BETJQNqtz","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"IZWJi04xIC2k","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"outputId":"f0d82527-ba45-45d4-cbff-9ab7b4accfb4","executionInfo":{"status":"ok","timestamp":1580905335560,"user_tz":-60,"elapsed":1429,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}}},"source":["for x, y in val_data_multi.take(4):\n","  out = multi_step_model.predict(x)\n","  out = out.reshape(out.shape[-2],2,100352)\n","  print (out.shape)\n","  print(y.shape)"],"execution_count":23,"outputs":[{"output_type":"stream","text":["(10, 2, 100352)\n","(10, 200704)\n","(10, 2, 100352)\n","(10, 200704)\n","(10, 2, 100352)\n","(10, 200704)\n","(7, 2, 100352)\n","(7, 200704)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"aQD_WrHI9s_G","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"69d4592d-4951-4668-ba15-beb5e21b38cc","executionInfo":{"status":"ok","timestamp":1580907185151,"user_tz":-60,"elapsed":553573,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}}},"source":["EVALUATION_INTERVAL = 100\n","EPOCHS = 50\n","\n","\n","multi_step_history = multi_step_model.fit(train_data_multi, epochs=EPOCHS,\n","                                          steps_per_epoch=EVALUATION_INTERVAL,\n","                                          validation_data=val_data_multi,validation_steps=50)"],"execution_count":18,"outputs":[{"output_type":"stream","text":["Train for 100 steps, validate for 50 steps\n","Epoch 1/50\n","100/100 [==============================] - 27s 270ms/step - loss: 0.2549 - val_loss: 0.2432\n","Epoch 2/50\n","100/100 [==============================] - 11s 109ms/step - loss: 0.2280 - val_loss: 0.2067\n","Epoch 3/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.2119 - val_loss: 0.1996\n","Epoch 4/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.1988 - val_loss: 0.2066\n","Epoch 5/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.1972 - val_loss: 0.1836\n","Epoch 6/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1875 - val_loss: 0.1778\n","Epoch 7/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.1857 - val_loss: 0.1910\n","Epoch 8/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1827 - val_loss: 0.1866\n","Epoch 9/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.1787 - val_loss: 0.1843\n","Epoch 10/50\n","100/100 [==============================] - 11s 109ms/step - loss: 0.1791 - val_loss: 0.1870\n","Epoch 11/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1771 - val_loss: 0.1814\n","Epoch 12/50\n","100/100 [==============================] - 11s 109ms/step - loss: 0.1759 - val_loss: 0.1754\n","Epoch 13/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1715 - val_loss: 0.1904\n","Epoch 14/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.1721 - val_loss: 0.1787\n","Epoch 15/50\n","100/100 [==============================] - 11s 109ms/step - loss: 0.1719 - val_loss: 0.1866\n","Epoch 16/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.1690 - val_loss: 0.1749\n","Epoch 17/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1689 - val_loss: 0.1867\n","Epoch 18/50\n","100/100 [==============================] - 11s 109ms/step - loss: 0.1685 - val_loss: 0.1853\n","Epoch 19/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1677 - val_loss: 0.1915\n","Epoch 20/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1672 - val_loss: 0.1745\n","Epoch 21/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.1647 - val_loss: 0.1807\n","Epoch 22/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1641 - val_loss: 0.1828\n","Epoch 23/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1640 - val_loss: 0.1902\n","Epoch 24/50\n","100/100 [==============================] - 11s 105ms/step - loss: 0.1641 - val_loss: 0.1745\n","Epoch 25/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.1617 - val_loss: 0.1885\n","Epoch 26/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1620 - val_loss: 0.1723\n","Epoch 27/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1595 - val_loss: 0.1960\n","Epoch 28/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1613 - val_loss: 0.1825\n","Epoch 29/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1595 - val_loss: 0.1865\n","Epoch 30/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1587 - val_loss: 0.1872\n","Epoch 31/50\n","100/100 [==============================] - 11s 109ms/step - loss: 0.1589 - val_loss: 0.1899\n","Epoch 32/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1570 - val_loss: 0.2057\n","Epoch 33/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1576 - val_loss: 0.2027\n","Epoch 34/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1567 - val_loss: 0.1882\n","Epoch 35/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1566 - val_loss: 0.2151\n","Epoch 36/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1555 - val_loss: 0.1937\n","Epoch 37/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1545 - val_loss: 0.1825\n","Epoch 38/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1553 - val_loss: 0.2061\n","Epoch 39/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1549 - val_loss: 0.2099\n","Epoch 40/50\n","100/100 [==============================] - 11s 109ms/step - loss: 0.1541 - val_loss: 0.1874\n","Epoch 41/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.1526 - val_loss: 0.1750\n","Epoch 42/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1533 - val_loss: 0.1756\n","Epoch 43/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1520 - val_loss: 0.1837\n","Epoch 44/50\n","100/100 [==============================] - 11s 108ms/step - loss: 0.1527 - val_loss: 0.1798\n","Epoch 45/50\n","100/100 [==============================] - 11s 105ms/step - loss: 0.1521 - val_loss: 0.1745\n","Epoch 46/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1516 - val_loss: 0.2019\n","Epoch 47/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1522 - val_loss: 0.2128\n","Epoch 48/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1505 - val_loss: 0.2173\n","Epoch 49/50\n","100/100 [==============================] - 11s 106ms/step - loss: 0.1512 - val_loss: 0.2091\n","Epoch 50/50\n","100/100 [==============================] - 11s 107ms/step - loss: 0.1500 - val_loss: 0.1857\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0V44Fljs9wzV","colab_type":"code","colab":{}},"source":["def plot_train_history(history, title):\n","  loss = history.history['loss']\n","  val_loss = history.history['val_loss']\n","\n","  epochs = range(len(loss))\n","\n","  plt.figure()\n","\n","  plt.plot(epochs, loss, 'b', label='Training loss')\n","  plt.plot(epochs, val_loss, 'r', label='Validation loss')\n","  plt.title(title)\n","  plt.legend()\n","\n","  plt.show()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"s5WkhoWN9zyN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":281},"outputId":"89fce809-a32d-4d52-db13-aff5a6ff9c50","executionInfo":{"status":"ok","timestamp":1580905668803,"user_tz":-60,"elapsed":1923,"user":{"displayName":"Mohammad Haidar","photoUrl":"","userId":"12216003490531667736"}}},"source":["plot_train_history(multi_step_history, 'Multi-Step Training and validation loss')"],"execution_count":26,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n/T8FIp3AwdVO1wAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]}]}